print("hello world!")
print('hello world!')
install.packages("tidyverse")
library(tidyverse)
summaries(mpg, count = n(), uniq_cnt = n_distinct(class), n_val = mean(!is.na(cty)),
a = first(cty))
library(tidyverse)
view(mpg)
summaries(mpg, count = n(), uniq_cnt = n_distinct(class), n_val = mean(!is.na(cty)),
a = first(cty))
summarise(mpg, count = n(), uniq_cnt = n_distinct(class), n_val = mean(!is.na(cty)),
a = first(cty))
view(servein)
mpg %>%
groupby(class)
mpg %>%
group_by(class)
summarise(desc(cty)) %>%
slice(1:3)
arrange(desc(cty)) %>%
slice(1:3)
mpg %>%
group_by(class)
arrange(desc(cty)) %>%
slice(1:3) %>%
ungroup()
mpg %>%
group_by(class) %>%
arrange(desc(cty)) %>%
slice(1:3) %>%
ungroup()
mpg %>%
group_by(class) %>%
arrange(desc(cty)) %>%
slice(1:3) %>%
ungroup()
mpg %>%
group_by(class) %>%
arrange(desc(cty)) %>%
slice(1:3) %>%
ungroup()
mpg %>%
group_by(class) %>%
arrange(desc(cty)) %>%
slice(1:3) %>%
mpg %>%
group_by(class) %>%
arrange(desc(cty)) %>%
slice(1:3) %>%
ungroup()
view(mpg)
mpg %>%
group_by(class) %>%
arrange(desc(cty)) %>%
slice(1:3) %>%
ungroup()
#
columns(mpg)[8]
#
colnames(mpg)[8]
#
colnames(mpg)[8] = "city"
colnames(mpg)[8]
# cum sum
mpg %>%
mutate(cum_cases = cumsum(cty), yesterday = lag(cty), diff = cty - yesterday)
# cum sum
mpg %>%
mutate(cum_cases = cumsum(cty), yesterday = lag(city), diff = city - yesterday)
# cum sum
mpg %>%
mutate(cum_cases = cumsum(city), yesterday = lag(city), diff = city - yesterday)
shiny::runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/week5')
library(shiny); runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/week5/HW2/HW2.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/week5/HW2/HW2.R')
shiny::runApp('C:/Users/35422/Desktop/app')
library(shiny)
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/4.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/4.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/app3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/app3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/app3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/4.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/app3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/app3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/app3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/app3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/app3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/app3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/app3.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/app3.R')
shinyApp(
ui = dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
id = "sidebar_menu",
menuItemOutput("dynamic_menu"),
menuItem("Menu2", tabName = "menu2")
)
),
dashboardBody(
uiOutput("menu1_content"),
uiOutput("menu2_content")
),
title = "Example"
),
server = function(input, output, session) {
output$dynamic_menu <- renderMenu({
menu_list <- lapply(letters[1:5], function(x) {
menuSubItem(x, tabName = paste0("menu1-", x))
})
menuItem(
text = "Menu1",
startExpanded = TRUE,
do.call(tagList, menu_list)
)
})
output$menu1_content <- renderUI({
sidebar_menu <- tstrsplit(input$sidebar_menu, "-")
if (sidebar_menu[[1]] == "menu1") box(sidebar_menu[[2]])
})
output$menu2_content <- renderUI({
sidebar_menu <- tstrsplit(input$sidebar_menu, "-")
if (sidebar_menu[[1]] == "menu2") box("I am menu2")
})
}
)
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/4.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/4.R')
library(shiny); runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/app5.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/app5.R')
runApp('C:/Users/35422/Desktop/课本和大纲/Data Visualization/Project/app5.R')
shiny::runApp('C:/Users/35422/Desktop/final')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/35422/Desktop/final')
runApp('C:/Users/35422/Desktop/final')
shiny::runApp('C:/Users/35422/Desktop/final')
runApp()
runApp()
runApp('C:/Users/35422/Desktop/final')
runApp()
runApp('C:/Users/35422/Desktop/final')
runApp()
runApp()
runApp('C:/Users/35422/Desktop/final')
runApp()
runApp('C:/Users/35422/Desktop/final')
runApp()
runApp('C:/Users/35422/Desktop/final')
library(shiny)
library(shinydashboard)
library(shinydashboardPlus)
library(leaflet)
library(DT)
library(plotly)
library(tidyverse)
library(dplyr)
require(maps)
require(viridis)
datamap <- read_csv("coutry_combined_clean.csv")
datamap1 <- mapdata[,-c(1,4:12)]
count <- datamap1 %>%
group_by(countries) %>%
summarise(n=n()) %>%
arrange(desc(n))%>%
head(10)
region <- read_csv("all2.csv")
region <- region[,-(3:11)]
map <- map_data("world")
map <- map[,-c(4,6)]
world_map <- map %>%
left_join(region, by = c("region"="name"))
final_map <- world_map %>%
left_join(count, by = c("alpha-2"="countries"))%>%
filter(!is.na(n))
mp <- final_map %>%
ggplot(aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill= n), colour = "white") +
scale_x_continuous(breaks = seq(-180, 210, 45), labels = function(x){paste0(x, "°")}) +
scale_y_continuous(breaks = seq(-60, 100, 30), labels = function(x){paste0(x, "°")}) +
scale_fill_gradient(low = "lightblue", high="steel blue") +
labs(title="Movie Distributions",
y="Latitude", x="Longitude",
subtitle = "The plot shows the total number of movies made by top 10 country and their distribution.\n"
) +
guides(fill = guide_legend(title ="Amount of movies"))+
theme_light()
mp
library(shiny)
library(shinydashboard)
library(shinydashboardPlus)
library(leaflet)
library(DT)
library(plotly)
library(tidyverse)
library(dplyr)
require(maps)
require(viridis)
datamap <- read_csv("coutry_combined_clean.csv")
datamap1 <- datamap[,-c(1,4:12)]
count <- datamap1 %>%
group_by(countries) %>%
summarise(n=n()) %>%
arrange(desc(n))%>%
head(10)
region <- read_csv("all2.csv")
region <- region[,-(3:11)]
map <- map_data("world")
map <- map[,-c(4,6)]
world_map <- map %>%
left_join(region, by = c("region"="name"))
final_map <- world_map %>%
left_join(count, by = c("alpha-2"="countries"))%>%
filter(!is.na(n))
mp <- final_map %>%
ggplot(aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill= n), colour = "white") +
scale_x_continuous(breaks = seq(-180, 210, 45), labels = function(x){paste0(x, "°")}) +
scale_y_continuous(breaks = seq(-60, 100, 30), labels = function(x){paste0(x, "°")}) +
scale_fill_gradient(low = "lightblue", high="steel blue") +
labs(title="Movie Distributions",
y="Latitude", x="Longitude",
subtitle = "The plot shows the total number of movies made by top 10 country and their distribution.\n"
) +
guides(fill = guide_legend(title ="Amount of movies"))+
theme_light()
mp
library(shiny)
library(shinydashboard)
library(shinydashboardPlus)
library(leaflet)
library(DT)
library(plotly)
library(tidyverse)
library(dplyr)
require(maps)
require(viridis)
datamap <- read_csv("coutry_combined_clean.csv")
datamap1 <- datamap[,-c(1,4:12)]
count <- datamap1 %>%
group_by(countries) %>%
summarise(n=n()) %>%
arrange(desc(n))%>%
head(10)
region <- read_csv("all2.csv")
region <- region[,-(3:11)]
map <- map_data("world")
map <- map[,-c(4,6)]
world_map <- map %>%
left_join(region, by = c("region"="name"))
final_map <- world_map %>%
left_join(count, by = c("alpha-2"="countries"))%>%
filter(!is.na(n))
mp <- final_map %>%
ggplot(aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill= n), colour = "white") +
scale_x_continuous(breaks = seq(-180, 210, 45), labels = function(x){paste0(x, "°")}) +
scale_y_continuous(breaks = seq(-60, 100, 30), labels = function(x){paste0(x, "°")}) +
scale_fill_gradient(low = "lightblue", high="steel blue") +
labs(title="Movie Distributions",
y="Latitude", x="Longitude",
subtitle = "The plot shows the total number of movies made by top 10 country and their distribution.\n"
) +
guides(fill = guide_legend(title ="Amount of movies"))+
theme_light()
mp
datamap <- read_csv("coutry_combined_clean.csv")
setwd("C:/Users/35422/Desktop/final")
library(shiny)
library(shinydashboard)
library(shinydashboardPlus)
library(leaflet)
library(DT)
library(plotly)
library(tidyverse)
library(dplyr)
require(maps)
require(viridis)
datamap <- read_csv("coutry_combined_clean.csv")
datamap1 <- datamap[,-c(1,4:12)]
count <- datamap1 %>%
group_by(countries) %>%
summarise(n=n()) %>%
arrange(desc(n))%>%
head(10)
region <- read_csv("all2.csv")
region <- region[,-(3:11)]
map <- map_data("world")
map <- map[,-c(4,6)]
world_map <- map %>%
left_join(region, by = c("region"="name"))
final_map <- world_map %>%
left_join(count, by = c("alpha-2"="countries"))%>%
filter(!is.na(n))
mp <- final_map %>%
ggplot(aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill= n), colour = "white") +
scale_x_continuous(breaks = seq(-180, 210, 45), labels = function(x){paste0(x, "°")}) +
scale_y_continuous(breaks = seq(-60, 100, 30), labels = function(x){paste0(x, "°")}) +
scale_fill_gradient(low = "lightblue", high="steel blue") +
labs(title="Movie Distributions",
y="Latitude", x="Longitude",
subtitle = "The plot shows the total number of movies made by top 10 country and their distribution.\n"
) +
guides(fill = guide_legend(title ="Amount of movies"))+
theme_light()
mp
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
View(count)
View(world_map)
data <- read_csv("data_drop_2cols.csv")
unique(data$platform)
data <- read_csv("data_drop_2cols.csv")
unique(data$platform)
genres <- read_csv("genres_two_columns.csv")
unique(genres$genres)
runApp()
unique(data$platform)
unique(data$platform)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
